<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title><![CDATA[Pixelfucker - fronted based posts from @huaba]]></title>
        <description><![CDATA[Pixelfucker - fronted based posts from @huaba]]></description>
        <link>https://thegrid.ai/pixelfucker/</link>
        <generator>The Grid</generator>
        <lastBuildDate>Fri, 11 Dec 2015 11:47:19 GMT</lastBuildDate>
        <atom:link href="https://thegrid.ai/pixelfucker/rss.xml" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[An introduction to hardware acceleration]]></title>
            <description><![CDATA[<article><h1>An introduction to hardware acceleration</h1><p>Hardware acceleration is the process of delegating a task usually performed by the CPU (Central Processor Unit) to the GPU (Graphical Processor Unit) in order to speed up performance, hence the name hardware acceleration. When applied to CSS, it is useful to know how a browser works in order to understand what is going on and what we can do.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/4e229fcee64c038d204c411b68c12a0f9200930a.png"></article>]]></description>
            <link>http://dev.edenspiekermann.com/2015/09/03/hardware-acceleration-introduction/</link>
            <guid isPermaLink="false">32bddea8-7bd4-41fa-b0f8-10e6d27a5914</guid>
            <pubDate>Fri, 11 Dec 2015 11:47:19 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Sass Guidelines]]></title>
            <description><![CDATA[<article><h1>Sass Guidelines</h1><p>My name is Hugo Giraudel, I am a 23 year-old French front-end developer, based in Berlin (Germany) since 2015, currently working at Edenspiekermann. I have been writing Sass for several years now and am the author of many Sass-related projects such as SassDoc, SitePoint Sass Reference and Sass-Compatibility.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/fd6c31691a19b2158af651952f78f7994564ceee.png"></article>]]></description>
            <link>http://sass-guidelin.es/</link>
            <guid isPermaLink="false">ed1e5bf1-bb84-4f35-80bc-b98c756f2e34</guid>
            <pubDate>Fri, 11 Dec 2015 11:46:24 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[A Complete Guide to Flexbox | CSS-Tricks]]></title>
            <description><![CDATA[<article><h1>A Complete Guide to Flexbox | CSS-Tricks</h1><p>The Flexbox Layout (Flexible Box) module (currently a W3C Last Call Working Draft) aims at providing a more efficient way to lay out, align and distribute space among items in a container, even when their size is unknown and/or dynamic (thus the word "flex").</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/150504e98ae6f2e3d482cc5855f7185243b41ca4.png"></article>]]></description>
            <link>https://css-tricks.com/snippets/css/a-guide-to-flexbox/</link>
            <guid isPermaLink="false">70bd0f5a-2130-4faa-b16d-e1c9cc5c7b86</guid>
            <pubDate>Fri, 11 Dec 2015 11:42:23 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Why I'm Excited About Native CSS Variables]]></title>
            <description><![CDATA[<article><h1>Why I'm Excited About Native CSS Variables</h1><p>A few weeks ago CSS variables-more accurately known as CSS Custom Properties -shipped in Chrome Canary behind the Experimental Web Platform Features flag. When Chrome engineer Addy Osmani first tweeted about the release, he was met with a surprising amount of negativity, hostility, and skepticism.</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/d585a608e5fc1f129fd795242556ae3cf83cd17b.png"></article>]]></description>
            <link>http://philipwalton.com/articles/why-im-excited-about-native-css-variables/</link>
            <guid isPermaLink="false">26e6b2b6-704c-4feb-a5a7-343b43593273</guid>
            <pubDate>Thu, 10 Dec 2015 12:40:15 GMT</pubDate>
        </item>
        <item>
            <title><![CDATA[Rendering SVG Paths in WebGL | CSS-Tricks]]></title>
            <description><![CDATA[<article><h1>Rendering SVG Paths in WebGL | CSS-Tricks</h1><p>The following is a guest post by Matt DesLauriers. Matt combined a bunch of techniques and open source modules to build an incredible demo where simple rec</p><img src="https://s3-us-west-2.amazonaws.com/the-grid-img/p/ba0f637b1787bc5d5df0abb326c92155dbb5e25b.jpg"></article>]]></description>
            <link>https://css-tricks.com/rendering-svg-paths-in-webgl/</link>
            <guid isPermaLink="false">0696cae9-b8e9-4c10-9ffc-11bb3e5bdd3c</guid>
            <pubDate>Thu, 10 Dec 2015 12:32:14 GMT</pubDate>
        </item>
    </channel>
</rss>